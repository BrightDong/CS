/*
 * File: TurtleGraphics.java
 * -------------------------
 * This file represents the starter file for the TurtleGraphics application.
 * Your job in Assignment #4 is to complete this application by implementing
 * the execute and replaceAction methods.  You also need to implement the
 * TurtleScanner class in the file TurtleScanner.java.
 */




import java.awt.PopupMenu;

import acm.program.*;

public class TurtleGraphics extends GraphicsProgram {

/* Constants to set the application size */
	public static final int APPLICATION_WIDTH = 1000;
	public static final int APPLICATION_HEIGHT = 600;

/*
 * Initializes the application.  Programs call the init() method before
 * laying out the components in the window and the run() method after the
 * layout is complete.  This application is driven entirely by events
 * generated by the buttons and menus and does not need a run() method.
 */
	public void init() {
		turtle = new GTurtle();
		add(turtle);
		ui = new TurtleGraphicsUI();
		ui.start();
		
	}

/*
 * Executes a turtle program, which consists of a string of commands.
 * Each command consists of a single letter, optionally followed by an
 * integer.  The commands you must implement for this assignment are
 *
 *    F#       Moves forward the specified number of pixels (default = 50)
 *    L#       Turn left the specified number of degrees (default = 90)
 *    R#       Turn right the specified number of degrees (default = 90)
 *    U        Raise the pen so that moving no longer draws a line
 *    D        Lower the pen to resume line drawing
 *    X#{cmds} Execute the block of commands the specified number of times
 */
	public void execute(String str) {
		// Fill this in
		//System.out.println(this.getMenuBar().getMenu(0).getMenuComponent(0));
		//System.out.println(str);
		TurtleTokenizer strToken = new TurtleTokenizer(str);
		while(strToken.hasMoreTokens()) {
			String token = strToken.nextToken();
			if(token == null)  // next token is null
				return;
			//System.out.println(str );
			//System.out.println(strToken );
			//System.out.println("token: " + token );
			//switch('X') {
			switch(token.charAt(0)) {
			case 'X':
				if(token.length() < 2) {  // x shall follow by a number	
					System.out.println("x token not have a number");
					break;
				}
				if(token.charAt(0) == 'X') {
					int i = Integer.parseInt(token.substring(1));  // fetch loop counter
					//execute the remain string without '{}'
					String substr = str.substring(token.length() + 1, str.length() - 1);
					for(int j = 0; j < i; j++) {
						execute(substr);		
					}
				}
			
				break;
			case 'F':
				if(token.length() == 1){
					turtle.forward();
				}else {
					int i = Integer.parseInt(token.substring(1));
					turtle.forward(i);
				}
				break;
			case 'L':
				if(token.length() == 1){
					turtle.left(DEFAULT_ANGLE);
				}else {
					double i = Double.parseDouble(token.substring(1));
					turtle.left(i);
				}				
				break;
			case 'R':
				if(token.length() == 1){
					turtle.right(DEFAULT_ANGLE);
				}else {
					double i = Double.parseDouble(token.substring(1));
					turtle.right(i);
				}				
				break;	
			case 'D':
				turtle.penDown();
				break;
			case 'U':
				turtle.penUp();
				break;				
			default:
					break;
				
			}
		}
		
	}

/*
 * Implements the Replace button action, which replaces all instances of a
 * pattern string in the current file with a replacement string.  The
 * pattern and replacement strings are taken from the replacement field in
 * the user interface, where they appear as pattern->replacement.   
 */
	public void replaceAction() {
		// Fill this in

		String text = ui.getProgramText();
		//System.out.println("text: " + text);
		String str = ui.getReplacementField();
		String oper = "->";
		int i = str.indexOf(oper);
		//System.out.println("i: " + i);
		String pattern = str.substring(0, i);
		//System.out.println("pattern: " + pattern);
		String replacement = str.substring(i + 2);
		//System.out.println("replacement: " + replacement);
		String textReplace = text.replaceAll(pattern, replacement);
		//System.out.println("text: " + textReplace);
		ui.setProgramText(textReplace);
		
	}

/* Private instance variables */
	
	private GTurtle turtle;         /* The GTurtle object        */
	private TurtleGraphicsUI ui;    /* The user-interface object */
	private final double DEFAULT_ANGLE = 90;

}
